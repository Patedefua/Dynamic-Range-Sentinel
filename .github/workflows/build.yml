name: Build VST2 Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Install dependencies (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y build-essential pkg-config libx11-dev libxext-dev libxrandr-dev libxinerama-dev libxcursor-dev libxcomposite-dev libasound2-dev libfreetype6-dev libxrender-dev libcurl4-openssl-dev

    - name: Configure project
      run: cmake -B Builds -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: cmake --build Builds --config Release

    - name: Create zip artifact
      run: |
        mkdir -p Artifacts
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          powershell Compress-Archive -Path Builds/Release/*.dll -DestinationPath Artifacts/DynamicRangeSentinel-VST-Bundle-Win.zip
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          ditto -c -k --sequesterRsrc --keepParent Builds/Release/DynamicRangeSentinel.vst Artifacts/DynamicRangeSentinel-VST-Bundle-Mac-Universal.zip
        else
          zip -r Artifacts/DynamicRangeSentinel-VST-Bundle-Linux.zip Builds/*.so || true
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: VST2-${{ matrix.os }}
        path: Artifacts/*.zip
