name: Construir y Publicar Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - name: 1. Clonar Repositorio
      uses: actions/checkout@v4

    # ⚡ PROTOCOLO DE VERIFICACIÓN DE INTEGRIDAD ⚡
    - name: 2. Diagnóstico de Integridad de Archivos
      shell: bash
      run: |
        echo "---[ INICIO DIAGNÓSTICO ]---"
        echo " "
        echo ">>> CONTENIDO DE CMakeLists.txt:"
        cat CMakeLists.txt
        echo " "
        echo ">>> CONTENIDO DE Source/PluginEditor.cpp:"
        cat Source/PluginEditor.cpp
        echo " "
        echo "---[ FIN DIAGNÓSTICO ]---"

    - name: 3. Instalar Dependencias (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config gobjc++ libasound2-dev libjack-jackd2-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev libgl-dev libfreetype6-dev libfontconfig1-dev libgtk-3-dev

    - name: 4. Configurar CMake
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          cmake . -B Builds -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        else
          cmake . -B Builds
        fi

    - name: 5. Construir el Plugin con CMake
      run: cmake --build Builds --config Release

    - name: 6. Preparar Paquete de Distribución
      # ... (el resto del archivo no cambia) ...
